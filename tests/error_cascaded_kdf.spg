<?xml version="1.0"?>
<spg>

    <const id="Prefix">
        <description>
            Key perfix
        </description>
        <flow sarg="const" sink="Concat" darg="prefix"/>
    </const>

    <const id="Keylen">
        <description>
            Key length
        </description>
        <flow sarg="const" sink="Random" darg="len">
            <assert integrity="true">
                Attacker must not choose too small key length
            </assert>
        </flow>
    </const>

    <rng id="Random">
        <description>
            Generate random key
        </description>
        <flow sarg="data" sink="Concat" darg="secbytes"/>
    </rng>

    <xform id="Concat">
        <description>
            Concatenate key with prefix for hash
        </description>
        <flow sarg="result" sink="Hash" darg="data">
            <assert confidentiality="true">
                Secret key.
            </assert>
        </flow>
        <arg name="secbytes"/>
        <arg name="prefix"/>
    </xform>

    <hash id="Hash">
        <description>
            Key derivation
        </description>
        <flow sarg="hash" sink="Split" darg="c">
            <assert confidentiality="true">
                Secret key.
            </assert>
        </flow>
    </hash>

    <xform id="Split">
        <description>
            Split hash result into 2 keys
        </description>
        <flow sarg="c1" sink="Key_Output1" darg="data"/>
        <flow sarg="c2" sink="Key_Output2" darg="data"/>
        <arg name="c"/>
    </xform>

    <output id="Key_Output1" integrity="false" confidentiality="true">
        <description>
            Send to key store 1
        </description>
        <arg name="data"/>
    </output>

    <output id="Key_Output2" integrity="false" confidentiality="true">
        <description>
            Send to key store 2
        </description>
        <arg name="data"/>
    </output>
</spg>
